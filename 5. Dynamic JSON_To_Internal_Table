************************************************************************
*   Program name:                                                      *
*   Description :                                                      *
*                                                                      *
*   Created   by: GDRAKOS DVALOUXIS                                    *
*                                                                      *
************************************************************************
REPORT dynamic_json_to_internal.

CLASS: lcx_json DEFINITION DEFERRED,
       lcl_json DEFINITION DEFERRED.

*&---------------------------------------------------------------------*
*& CLASS DEFINITIONS
*&---------------------------------------------------------------------*
CLASS lcx_json DEFINITION INHERITING FROM cx_static_check.

  PUBLIC SECTION.

    METHODS:
      constructor IMPORTING text TYPE string,
      get_text REDEFINITION.

  PRIVATE SECTION.

    DATA: local_text TYPE string.

ENDCLASS.

CLASS lcl_json DEFINITION CREATE PUBLIC.

  PUBLIC SECTION.

    DATA: lr_source_editor TYPE REF TO cl_gui_textedit.

    METHODS:build_table_from_json RAISING lcx_json.

  PRIVATE SECTION.

    DATA:lo_json_structure TYPE REF TO data.

    METHODS:get_structure_from_json RAISING lcx_json.

ENDCLASS.

*&---------------------------------------------------------------------*
*& SELECTION SCREEN DESIGN
*&---------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE title1.


SELECTION-SCREEN END OF BLOCK b1.
*&---------------------------------------------------------------------*
*& INITIALIZATION OF SELECTION SCREEN ELEMENTS
*&---------------------------------------------------------------------*
INITIALIZATION.
  PERFORM screen_initialization.
*&---------------------------------------------------------------------*
*& EXECUTABLE CODE
*&---------------------------------------------------------------------*
START-OF-SELECTION.

  TRY.

      DATA(lo_json) = NEW lcl_json( ).

      CALL SCREEN 0100.

    CATCH lcx_json INTO DATA(lo_exception).
      MESSAGE lo_exception->get_text( ) TYPE cl_cms_common=>con_msg_typ_i DISPLAY LIKE cl_cms_common=>con_msg_typ_e.
  ENDTRY.

END-OF-SELECTION.

*&---------------------------------------------------------------------*
*& SUBROUTINE CREATION
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Form SCREEN INITIALIZATION
*&---------------------------------------------------------------------*
FORM screen_initialization.

  title1  = 'Selection Criteria'.

ENDFORM.

*&---------------------------------------------------------------------*
*& CLASS IMPLEMENTATIONS
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Class LCX_XML
*&---------------------------------------------------------------------*
CLASS lcx_json IMPLEMENTATION.

  METHOD constructor.

    super->constructor( textid = CONV #( text ) ).
    local_text = text.

  ENDMETHOD.

  METHOD get_text.

    result = me->local_text.

  ENDMETHOD.

ENDCLASS.

*&---------------------------------------------------------------------*
*& Class LCL_JSON
*&---------------------------------------------------------------------*
CLASS lcl_json IMPLEMENTATION.


  METHOD build_table_from_json.

    me->get_structure_from_json( ).

    ASSIGN lo_json_structure->* TO FIELD-SYMBOL(<fs_json_structure>).

    DO.

      EXIT.

    ENDDO.

  ENDMETHOD.

  METHOD get_structure_from_json.

    DATA: lv_json_lines     TYPE soli_tab.

    lr_source_editor->get_text_as_stream(
      IMPORTING
        text                   =  lv_json_lines
      EXCEPTIONS
        error_dp               = 1
        error_cntl_call_method = 2
        OTHERS                 = 3 ).

    IF sy-subrc NE 0.
      RAISE EXCEPTION TYPE lcx_json EXPORTING text = 'Error Reading Lines of JSON'.
    ENDIF.

    TRY.

        DATA(lo_json) = NEW /ui2/cl_json( ).
        lo_json->deserialize_int(
          EXPORTING
            json = cl_bcs_convert=>txt_to_string( EXPORTING it_soli = lv_json_lines )
          CHANGING
            data  = lo_json_structure ).

      CATCH cx_sy_move_cast_error INTO DATA(lx_sy_move_cast_error).
        RAISE EXCEPTION TYPE lcx_json EXPORTING text = lx_sy_move_cast_error->get_text( ).
    ENDTRY.

  ENDMETHOD.

ENDCLASS.


*&---------------------------------------------------------------------*
*& Module PROCESS_BEFORE_OUTPUT OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE process_before_output OUTPUT.

  SET PF-STATUS 'ZSTATUS_0100'.
  SET TITLEBAR 'ZTITLE_0100'.

  IF lo_json->lr_source_editor IS NOT BOUND.

    lo_json->lr_source_editor = NEW cl_gui_textedit( parent =  NEW cl_gui_docking_container( side = cl_gui_docking_container=>dock_at_left
                                                                                              no_autodef_progid_dynnr = abap_true
                                                                                              extension = 600 ) ) .

  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  PROCESS_AFTER_INPUT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE process_after_input INPUT.

  DATA: ok_code_0100 TYPE sy-ucomm.

  CLEAR sy-ucomm.

  CASE ok_code_0100.
    WHEN 'BACK' OR 'UP' OR 'EXIT'.
      LEAVE PROGRAM.
    WHEN 'CONVERT'.
      lo_json->build_table_from_json( ).
  ENDCASE.

ENDMODULE.
